import { connect, disconnect } from 'mongoose';
import { User } from '../src/models/User';
import dotenv from 'dotenv';

dotenv.config();

async function testChatbot() {
  try {
    console.log('ü§ñ Testando reconhecimento de planos pelo chatbot...');
    
    // Conectar ao MongoDB
    if (!process.env.MONGO_URI) {
      throw new Error('MONGO_URI n√£o configurada');
    }
    
    await connect(process.env.MONGO_URI);
    console.log('‚úÖ Conectado ao MongoDB');

    // Buscar o usu√°rio espec√≠fico
    const firebaseUid = 'Xn9dK4jXw7W5qO2g9AmSJkpLLCq1';
    const user = await User.findOne({ firebaseUid });

    if (!user) {
      console.log('‚ùå Usu√°rio n√£o encontrado');
      return;
    }

    console.log(`üìã Usu√°rio: ${user.email}`);
    console.log(`üìã Plano: ${user.subscription?.plan}`);
    console.log(`üìã Status: ${user.subscription?.status}`);

    // Simular a l√≥gica do chatbot
    const subscriptionStatus = user.subscription?.status || 'inactive';
    const subscriptionPlan = user.subscription?.plan?.toLowerCase() || 'essencial';

    console.log(`üîç Status da assinatura: ${subscriptionStatus}`);
    console.log(`üîç Plano (lowercase): ${subscriptionPlan}`);

    // Verificar se √© premium
    const isPremium = subscriptionStatus === 'active' && (
      subscriptionPlan === 'top' || 
      subscriptionPlan === 'plano top' || 
      subscriptionPlan === 'top-anual' ||
      subscriptionPlan === 'plano top anual' ||
      subscriptionPlan === 'premium' || 
      subscriptionPlan === 'Premium' ||
      subscriptionPlan === 'enterprise' ||
      subscriptionPlan === 'Enterprise'
    );

    console.log(`ü§ñ √â premium? ${isPremium ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);

    // Testar diferentes planos
    const testPlans = [
      'Plano Essencial Anual',
      'Plano Top Anual', 
      'Plano Top',
      'essencial',
      'top'
    ];

    console.log('\nüß™ Testando diferentes planos:');
    testPlans.forEach(plan => {
      const planLower = plan.toLowerCase();
      const isPremiumTest = subscriptionStatus === 'active' && (
        planLower === 'top' || 
        planLower === 'plano top' || 
        planLower === 'top-anual' ||
        planLower === 'plano top anual' ||
        planLower === 'premium' || 
        planLower === 'Premium' ||
        planLower === 'enterprise' ||
        planLower === 'Enterprise'
      );
      
      console.log(`  ${plan}: ${isPremiumTest ? '‚úÖ Premium' : '‚ùå N√£o Premium'}`);
    });

    console.log('\nüéâ Teste conclu√≠do!');

  } catch (error) {
    console.error('‚ùå Erro:', error);
  } finally {
    await disconnect();
    console.log('üîå Desconectado do MongoDB');
  }
}

// Executar o script
testChatbot().catch(console.error); 